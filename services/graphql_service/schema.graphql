type Contact {
  firmId: String
  contactId: String
  firstName: String!
  middleName: String
  lastName: String!
  primaryEmail: String!
  alternateEmail: String
  primaryAddress: String
  alternateAddress: String
  residency: String
  alias: String
  telephone: String
  fax: String
}

input CreateContactInput {
    firstName: String!
    middleName: String
    lastName: String!
    primaryEmail: String!
    alternateEmail: String
    primaryAddress: String
    alternateAddress: String
    residency: String
    alias: String
    telephone: String
    fax: String
}

type Query {
    listAllContacts: [Contact]
    getContactById(contactId: String): Contact
}

type Mutation {
    createContact(input: CreateContactInput): Contact
}